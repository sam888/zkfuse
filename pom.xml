<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.zkfuse</groupId>
    <artifactId>zkfuse</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>

        <!-- stop Maven message about build being platform-dependant -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <zk.version>6.5.2</zk.version>
        <zkel.version>1.0.2</zkel.version>
        <spring.version>3.2.4.RELEASE</spring.version>
        <spring.security.version>3.1.0.RELEASE</spring.security.version>
        <spring.asm.version>3.1.4.RELEASE</spring.asm.version>
        <hsqldb.version>1.8.0.7</hsqldb.version>
        <hibernate.version>4.2.3.Final</hibernate.version>
        <commons-dbcp.version>1.4</commons-dbcp.version>
        <geronimo-jta.version>1.1.1</geronimo-jta.version>
        <commons-lang.version>2.6</commons-lang.version>
        <bsh.version>2.0b4</bsh.version>
        <commons-fileupload.version>1.3</commons-fileupload.version>
        <commons-io.version>2.4</commons-io.version>
        <commons-logging.version>1.1.3</commons-logging.version>
        <httpclient.version>4.2.5</httpclient.version>
        <servlet-api.version>2.5</servlet-api.version>
        <jstl-api.version>1.1.2</jstl-api.version>
        <concurrent.version>1.3.4</concurrent.version>
        <zkspring.version>3.0</zkspring.version>
        <aspectj.version>1.6.9</aspectj.version>
        <javassist.version>3.14.0-GA</javassist.version>
        <lombok.version>0.12.0</lombok.version>
        <!--  <lombok.version>0.11.2</lombok.version>-->

        <!-- Slow start up for version 8.x... Stick with 7 now -->
        <maven-jetty-plugin.version>7.6.11.v20130520</maven-jetty-plugin.version>

        <maven-war-plugin.version>2.3</maven-war-plugin.version>

        <!-- testing frameworks -->
        <junit.version>4.7</junit.version>
        <mockito.version>1.9.0</mockito.version>
        <dbunit.version>2.4.8</dbunit.version>
        <powermock.version>1.4.12</powermock.version>

        <!-- added -->
        <tomcat.version>6.0.35</tomcat.version>
        <jetty-version>7.2.2.v20101205</jetty-version>
        <cxf.version>2.7.6</cxf.version>
        <atomikos.version>3.6.5</atomikos.version>
        <java.version>1.7</java.version>
        <mq.version>7.0.1</mq.version>
        <hibernate-jpa.version>1.0.1.Final</hibernate-jpa.version>
        <c3p0.version>0.9.1.2</c3p0.version>
        <cglib.version>2.2</cglib.version>
        <cglib-nodep.version>2.2</cglib-nodep.version>

        <jrebel-maven-plugin.version>1.1.3</jrebel-maven-plugin.version>
        <tomcat7-maven-plugin.version>2.1</tomcat7-maven-plugin.version>

        <shiro.core.version>1.2.2</shiro.core.version>
        <shiro.web.version>1.2.2</shiro.web.version>
        <slf4j.simple.version>1.7.5</slf4j.simple.version>

        <enunciate.version>1.27</enunciate.version>

        <bouncycastle.version>1.46</bouncycastle.version>
    </properties>

    <build>

        <pluginManagement>
            <plugins>

                <!-- skip unit tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <skip>true</skip>
                    </configuration>
               </plugin>

               <plugin>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven-war-plugin.version}</version>
               </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <version>2.9</version>
                    <configuration>
                        <useProjectReferences>true</useProjectReferences>
                        <additionalProjectnatures>
                            <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                            <projectnature>org.eclipse.wst.common.project.facet.core.nature</projectnature>
                            <projectnature>org.eclipse.wst.common.modulecore.ModuleCoreNature</projectnature>
                        </additionalProjectnatures>
                        <additionalBuildcommands>
                            <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                            <buildcommand>org.eclipse.jdt.core.javabuilder</buildcommand>
                            <buildcommand>org.eclipse.wst.common.project.facet.core.builder</buildcommand>
                            <buildcommand>org.eclipse.wst.validation.validationbuilder</buildcommand>
                        </additionalBuildcommands>
                        <wtpversion>2.0</wtpversion>
                        <classpathContainers>
                            <classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
                            <classpathContainer>org.eclipse.jst.j2ee.internal.module.container</classpathContainer>
                        </classpathContainers>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>

                <!-- Below plugin provides a separate JAR for the JAX-WS artifacts
                     (i.e., the objects created by running wsdl2java or wsimport), as this JAR
                     will also be used by the SOAP client for each web service provider using this plugin.
                     More info: http://maven.apache.org/plugins/maven-assembly-plugin/
                -->
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
                        <appendAssemblyId>true</appendAssemblyId>
                        <attach>true</attach>
                    </configuration>
                    <executions>
                        <execution>
                            <id>make-assembly</id>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Below used with client pom file in zkfuse_web_service, default params for running client via mvn exec:exec -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>1.2.1</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <executable>java</executable>
                        <arguments>
                            <argument>-classpath</argument>
                            <classpath />
                            <!-- Uncomment below for debug output with CXF. Will
                                need to configure client-side interceptors and supply a java.util.logging
                                properties file: http://cxf.apache.org/docs/debugging-and-logging.html
                                Place the logging file in the client folder. -->
                            <!--argument>
                                -Djava.util.logging.config.file=mylogging.properties
                            </argument -->
                            <!-- Uncomment below for debug output with Metro -->
                            <!--argument>
                                -Dcom.sun.xml.ws.transport.http.client.HttpTransportPipe.dump=true
                            </argument-->
                            <argument>
                                client.WSClient
                            </argument>
                        </arguments>
                    </configuration>
                </plugin>

                <!-- Below used with CXF service poms -->
                <plugin>
                    <groupId>org.apache.cxf</groupId>
                    <artifactId>cxf-codegen-plugin</artifactId>
                    <version>${cxf.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>wsdl2java</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!--
                  For Tomcat 7, both embedded (tomcat7:run-war) and standalone deployment - tomcat7:deploy/undeploy/redeploy

                  How to configure Maven and Tomcat to use below plugin: http://www.jroller.com/gmazza/entry/web_service_tutorial#WFstep8
                -->
                <plugin>
                    <groupId>org.apache.tomcat.maven</groupId>
                    <artifactId>tomcat7-maven-plugin</artifactId>
                    <version>${tomcat7-maven-plugin.version}</version>
                    <configuration>
                        <server>myTomcat</server>
                        <url>http://localhost:8080/manager/text</url>
                        <path>/${project.build.finalName}</path>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.zeroturnaround</groupId>
                    <artifactId>jrebel-maven-plugin</artifactId>
                    <configuration>
                          <!--
                            <name>${liverebel.name}</name>
                            <version>${liverebel.version}</version>
                          -->
                        <alwaysGenerate>true</alwaysGenerate>
                        <relativePath>.</relativePath>
                        <rootPath>${project.basedir}</rootPath>
                    </configuration>
                    <executions>
                        <execution>
                            <id>generate-rebel-xml</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>generate-liverebel-xml</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>generate-liverebel-xml</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

            </plugins>

        </pluginManagement>
    </build>

    <repositories>

        <repository>
            <id>ZK CE</id>
            <url>http://mavensync.zkoss.org/maven2</url>
        </repository>

      <!--  <repository>
            <id>ZK EE</id>
            <url>http://mavensync.zkoss.org/maven2</url>
        </repository>
        <repository>
            <id>ZK PE Evaluation</id>
            <url>http://mavensync.zkoss.org/zk/pe-eval</url>
        </repository>
        <repository>
            <id>ZK EE Evaluation</id>
            <url>http://mavensync.zkoss.org/zk/ee-eval</url>
        </repository>-->

		<repository>
			<id>projectlombok.org</id>
			<url>http://projectlombok.org/mavenrepo</url>
		</repository>

    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>zkmaven</id>
            <name>ZK Maven Plugin Repository</name>
            <url>http://mavensync.zkoss.org/maven2</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>

        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-maven-plugin</artifactId>
            <version>${maven-jetty-plugin.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.dbunit</groupId>
            <artifactId>dbunit</artifactId>
            <version>${dbunit.version}</version>
            <scope>test</scope>
        </dependency>
        
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
	        <groupId>org.powermock</groupId>
	        <artifactId>powermock-core</artifactId>
	        <version>${powermock.version}</version>
	        <scope>test</scope>
        </dependency>
        <dependency>
		    <groupId>org.powermock</groupId>
		    <artifactId>powermock-api-easymock</artifactId>
		    <version>1.4.12</version>
		</dependency>
		
		<!-- <dependency>
		    <groupId>org.powermock</groupId>
		    <artifactId>powermock-module-test-easymock-junit4</artifactId>
		    <version>1.4.12</version>
		</dependency>
		<dependency>
	      <groupId>org.easymock</groupId>
	      <artifactId>easymock</artifactId>
	      <version>3.1</version>
	      <scope>test</scope>
	    </dependency> -->

        <!-- Shiro uses SLF4J for logging. -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>${slf4j.simple.version}</version>
            <scope>runtime</scope>
        </dependency>

       <!-- -->

    </dependencies>

    <dependencyManagement>

        <dependencies>

            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-core</artifactId>
                <version>${shiro.core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-web</artifactId>
                <version>${shiro.web.version}</version>
            </dependency>

            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk16</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>

            <!-- cxf -->
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-frontend-jaxws</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-transports-http</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-ws-security</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-transports-http-jetty</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-core</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-api</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-ws-policy</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <!--<dependency>
                <groupId>org.apache.cxf.services.sts</groupId>
                <artifactId>cxf-services-sts-core</artifactId>
                <version>${cxf.version}</version>
            </dependency>-->

            <!-- cglib lib -->
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>${cglib.version}</version>
            </dependency>
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib-nodep</artifactId>
                <version>${cglib-nodep.version}</version>
            </dependency>

            <dependency>
                <groupId>c3p0</groupId>
                <artifactId>c3p0</artifactId>
                <version>${c3p0.version}</version>
            </dependency>

            <!-- javax.servlet lib -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>${servlet-api.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jstl</artifactId>
                <version>${jstl-api.version}</version>
                <scope>runtime</scope>
            </dependency>

            <!-- jakarta commons lib -->
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${commons-logging.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${commons-fileupload.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>
            <dependency>
                <groupId>concurrent</groupId>
                <artifactId>concurrent</artifactId>
                <version>${concurrent.version}</version>
                <scope>runtime</scope>
            </dependency>

            <dependency>
                <groupId>org.javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>${javassist.version}</version>
                <scope>runtime</scope>
            </dependency>

            <!-- spring lib -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-oxm</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.version}</version>
            </dependency>
           <!-- <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-asm</artifactId>
                <version>${spring.asm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring.version}</version>
            </dependency>
            -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aspects</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-expression</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jdbc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-core</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-web</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-config</artifactId>
                <version>${spring.security.version}</version>
            </dependency>

            <!-- hibernate lib -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>commons-collections</artifactId>
                        <groupId>commons-collections</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>asm</groupId>
                        <artifactId>asm</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>asm</groupId>
                        <artifactId>asm-attrs</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>cglib</groupId>
                        <artifactId>cglib</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>4.2.0.Final</version>
            </dependency>

            <!-- logging lib -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>1.6.4</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>1.6.4</version>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.16</version>
            </dependency>

            <!-- jakarta commons lib -->
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>1.8.3</version>
            </dependency>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>3.2.1</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.6</version>
            </dependency>
            <dependency>
                <groupId>commons-dbcp</groupId>
                <artifactId>commons-dbcp</artifactId>
                <version>${commons-dbcp.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>

            <!-- zk lib -->
            <dependency>
                <groupId>org.zkoss.theme</groupId>
                <artifactId>breeze</artifactId>
                <version>${zk.version}</version>
            </dependency>
            <dependency>
                <groupId>org.zkoss.theme</groupId>
                <artifactId>sapphire</artifactId>
                <version>${zk.version}</version>
            </dependency>
            <!--<dependency>
                <groupId>org.zkoss.zk</groupId>
                <artifactId>zkmax</artifactId>
                <version>${zk.version}</version>
            </dependency>-->
            <dependency>
                <groupId>org.zkoss.zk</groupId>
                <artifactId>zkplus</artifactId>
                <version>${zk.version}</version>
            </dependency>
            <dependency>
                <groupId>org.zkoss.zk</groupId>
                <artifactId>zhtml</artifactId>
                <version>${zk.version}</version>
            </dependency>
            <!--<dependency>
                <groupId>org.zkoss.zk</groupId>
                <artifactId>zkex</artifactId>
                <version>${zk.version}</version>
                <scope>compile</scope>
            </dependency>-->
            <dependency>
                <groupId>org.zkoss.zk</groupId>
                <artifactId>zul</artifactId>
                <version>${zk.version}</version>
            </dependency>
            <dependency>
                <groupId>org.zkoss.common</groupId>
                <artifactId>zweb</artifactId>
                <version>${zk.version}</version>
            </dependency>
            <dependency>
                <groupId>org.zkoss.common</groupId>
                <artifactId>zcommon</artifactId>
                <version>${zk.version}</version>
            </dependency>
            <dependency>
                <groupId>org.zkoss.zkforge.el</groupId>
                <artifactId>zcommons-el</artifactId>
                <version>1.1.0</version>
            </dependency>
            <dependency>
	            <groupId>org.zkoss.zk</groupId>
	            <artifactId>zkbind</artifactId>
	            <version>${zk.version}</version>
	        </dependency>
	        <!--<dependency>
                <groupId>org.zkoss.zk</groupId>
                <artifactId>zml</artifactId>
	            <version>${zk.version}</version>
            </dependency>-->
            <dependency>
                <groupId>org.zkoss.zk</groupId>
                <artifactId>zkspring-security</artifactId>
                <version>${zkspring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.zkoss.zk</groupId>
                <artifactId>zkspring-core</artifactId>
                <version>${zkspring.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>org.springframework.web.servlet</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>org.springframework.web</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>org.springframework.context</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>org.springframework.context.support</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>org.springframework.transaction</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>org.springframework.expression</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>jsr250-api</artifactId>
                <version>1.0</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjrt</artifactId>
                <version>1.6.9</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-ehcache</artifactId>
                <version>${hibernate.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>jaxb-api</artifactId>
                        <groupId>javax.xml.bind</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>xml-apis</artifactId>
                        <groupId>xml-apis</groupId>
                    </exclusion>

                    <!-- excluded so CXF can use new version to avoid exception -->
                    <exclusion>
                        <groupId>net.sf.ehcache</groupId>
                        <artifactId>ehcache-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>javax.xml.soap</groupId>
                <artifactId>saaj-api</artifactId>
                <version>1.3</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.activation</groupId>
                        <artifactId>activation</artifactId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jaxb-api</artifactId>
                        <groupId>javax.xml.bind</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.messaging.saaj</groupId>
                <artifactId>saaj-impl</artifactId>
                <version>1.3.2</version>
            </dependency>

            <dependency>
                <groupId>org.samba.jcifs</groupId>
                <artifactId>jcifs</artifactId>
                <version>1.3.14</version>
            </dependency>

            <dependency>
                <groupId>org.freemarker</groupId>
                <artifactId>freemarker</artifactId>
                <version>2.3.18</version>
            </dependency>

            <!-- jmx lib -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-jms</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.jms</groupId>
                <artifactId>jms</artifactId>
                <version>1.1</version>
            </dependency>

            <!-- jdbc driver -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>5.1.18</version>
            </dependency>
            
            <dependency>
	            <groupId>org.projectlombok</groupId>
	            <artifactId>lombok</artifactId>
	            <version>${lombok.version}</version>
	            <scope>provided</scope>
	        </dependency>

            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-maven-plugin</artifactId>
                <version>0.11.8.0</version>
            </dependency>

            <!-- zkfuse projects -->
            <dependency>
                <groupId>org.zkfuse</groupId>
                <artifactId>zkfuse_model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.zkfuse</groupId>
                <artifactId>zkfuse_dao</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.zkfuse</groupId>
                <artifactId>zkfuse_service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
            	<groupId>org.zkfuse</groupId>
            	<artifactId>zkfuse_util</artifactId>
            	<version>${project.version}</version>
            </dependency>
            <dependency>
            	<groupId>org.zkfuse</groupId>
            	<artifactId>zkfuse_web_service</artifactId>
            	<version>${project.version}</version>
            </dependency>
            
            <!-- for OpenShift -->
			<dependency>
				<groupId>org.jboss.spec</groupId>
				<artifactId>jboss-javaee-6.0</artifactId>
				<version>1.0.0.Final</version>
				<type>pom</type>
				<scope>provided</scope>
			</dependency>

        </dependencies>
    </dependencyManagement>
    
    <profiles>

        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <modules>
                <module>zkfuse_model</module>
                <module>zkfuse_dao</module>
                <module>zkfuse_util</module>
                <module>zkfuse_service</module>
                <module>zkfuse_web_service</module>
                <module>zkfuse_web</module>
            </modules>
        </profile>

        <profile>
            <!-- When built in OpenShift the 'openshift' profile will be used when invoking mvn. -->
            <!-- Use this profile for any OpenShift specific customization your app will need. -->
            <!-- By default that is to put the resulting archive into the 'deployments' folder. -->
            <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
            <id>openshift</id>
            <build>
                <finalName>zkfuse</finalName>
                <plugins>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>2.3</version>
                        <configuration>
                            <outputDirectory>deployments</outputDirectory>
                            <warName>zkfuse</warName>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>